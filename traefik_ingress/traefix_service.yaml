---
# Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-ingress-controller
---
# Deployment
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: traefik-ingress-controller
  labels:
    k8s-app: traefik-ingress-lb
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: traefik-ingress-lb
  template:
    metadata:
      labels:
        k8s-app: traefik-ingress-lb
        name: traefik-ingress-lb
    spec:
      serviceAccountName: traefik-ingress-controller
      terminationGracePeriodSeconds: 60
      containers:
      - image: traefik
        name: traefik-ingress-lb
        ports:
        - name: web
          containerPort: 80
          hostPort: 80
        - name: webssl
          protocol: TCP
          containerPort: 443
          hostPort: 443
        - protocol: TCP
          port: 8080
          name: admin
        args:
        - --web
        - --kubernetes
        - --configFile=/etc/traefik/traefik.toml
        - --logLevel=DEBUG
      volumes:
      - hostPath:
        path: /etc/traefik
        name: traefik-volume
      nodeSelector:
        kubernetes.dcos.io/node-type: public
      tolerations:
      - key: "node-type.kubernetes.dcos.io/public"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
---
# Service
apiVersion: v1
kind: Service
metadata:
  name: traefik-ingress-service
spec:
  selector:
    k8s-app: traefik-ingress-lb
  ports:
    - protocol: TCP
      port: 80
      name: web
    - protocol: TCP
      containerPort: 443
      hostPort: 443
    - protocol: TCP
      port: 8080
      name: admin
  volumeMounts:
    - mountPath: /etc/traefik
      name: traefik-volume
      readOnly: false
  clusterIP: None
---
#Ingress
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: probe-ingress
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
  - http:
      paths:
      - path: /test
        backend:
          serviceName: nginxservice
          servicePort: 80